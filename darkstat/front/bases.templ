package front

import (
	"strconv"
	"github.com/darklab8/fl-darkstat/darkstat/front/urls"
	"github.com/darklab8/fl-darkstat/darkstat/common/types"
	"github.com/darklab8/fl-configs/configs/configs_export"
)

// https://www.cssscript.com/minimalist-table-sortable/#:~:text=Description%3A-,sorttable.,clicking%20on%20the%20table%20headers
// https://www.cssscript.com/fast-html-table-sorting/
templ BasesT(bases []configs_export.Base) {
	@TabMenu(urls.Bases)
	@TabContent() {
		<style>
		th, td {
				padding-left: 5px;
				padding-bottom: 2px;
				padding-top: 2px;
				padding-right: 5px;

				
			}

			table, tr,th, td, thead {
				border-width: 1px;
				border-style: solid;
			}
			th {
				border-color: #8B8B8B;

				cursor: pointer;
				&:hover {
					background-color: #DDD;
				}
			}
			td {
				border-color: #D7D7D7;
			}
			tbody {
				& tr {
					cursor: pointer;
					&:hover {
						background-color: #EEE;
					}
				}
			}
			.splitter {
				display: flex;
				flex-direction: row;
		
				& #table-wrapper {
					width: 75%;
					
					& #table-top {
						overflow: scroll;
						height: calc(70vh - 50px) !important;
					}
					& #table-bottom {
						overflow: scroll;
						height: 30vh;
					}
				}
				& #description {
					width: 25%;
					overflow-y: scroll;
					height: calc(100vh - 50px) !important;
				}

				.sortable {
					width: 100%;
					min-width: 800px;

					& th, td {
						white-space: nowrap;
					}
				}
			}
			
		</style>
		<div class="splitter">
			<div id="table-wrapper">
				<div id="table-top">
					<table class="sortable">
						<thead>
							<tr>
								<th style="width:200px;">Base</th>
								<th style="width:100px;">System</th>
								<th style="width:200px;">Base Nickname</th>
								<th style="width:50px;">System Nickname</th>
								<th style="width:100px;">Base Name ID</th>
								<th style="width:100px;">Infocard ID</th>
								<th style="max-width:100%;"></th>
							</tr>
						</thead>
						<tbody>
							for _, base := range bases {
								<tr
									hx-get={ types.GetCtx(ctx).SiteRoot + "infocard/" + base.Nickname }
									hx-trigger="click"
									hx-target="#description"
									hx-swap="innerHTML"
								>
									<td>{ base.Name }</td>
									<td>{ base.System }</td>
									<td>{ base.Nickname }</td>
									<td>{ base.SystemNickname }</td>
									<td>{ strconv.Itoa(base.StridName) }</td>
									<td>{ strconv.Itoa(base.InfocardID) }</td>
									<td></td>
								</tr>
							}
						</tbody>
					</table>
				</div>
				<div id="table-bottom">
					<table class="sortable">
						<thead>
							<tr class="flexed-tr">
								<th style="width:200px;">Good</th>
								<th style="width:100px;">Type</th>
								<th style="width:50px;">Price</th>
								<th style="width:50px;">Base Sells</th>
								<th style="width:50px;">Level Req'd</th>
								<th style="width:50px;">Reputation Req'd</th>
								<th style="width:50px;">Price Modifier</th>
								<th style="width:200px;">Nickname</th>
								<th style="max-width:100%;"></th>
							</tr>
						</thead>
						<tbody></tbody>
					</table>
				</div>
			</div>
			<div id="description">
				@Infocard()
			</div>
		</div>
	}
}

templ Infocard() {
	<style>
		.infocard {
			margin: 10px;

			.infocard_p {
				margin-top: 10px;
				margin-bottom: 10px;
			}
		}
	</style>
	<div class="infocard">
		<h3>infocard</h3>
		{ children... }
	</div>
}

templ BaseInfocard(info configs_export.Infocard) {
	@Infocard() {
		for _, line := range info.Start {
			<p class="infocard_p">{ line }</p>
		}
		for _, line := range info.Middle {
			<p class="infocard_p">{ line }</p>
		}
	}
}
