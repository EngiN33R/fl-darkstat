package front

import (
	"strconv"
	"github.com/darklab8/fl-darkstat/darkstat/front/urls"
	"github.com/darklab8/fl-darkstat/darkstat/common/types"
	"github.com/darklab8/fl-configs/configs/configs_export"
	"fmt"
	"strings"
)

func MarketGoodInfocardUrl(good_nickname string) string {
	return "market_goods/infocards/info_" + strings.ToLower(good_nickname)
}

func BaseMarketGoodUrl(base configs_export.Base) string {
	return "bases/marketgoods/mg_" + strings.ToLower(base.Nickname)
}

func BaseInfocardUrl(base configs_export.Base) string {
	return "bases/infocards/info_" + strings.ToLower(base.Nickname)
}

// https://www.cssscript.com/minimalist-table-sortable/#:~:text=Description%3A-,sorttable.,clicking%20on%20the%20table%20headers
// https://www.cssscript.com/fast-html-table-sorting/
templ BasesT(bases []configs_export.Base) {
	@TabMenu(urls.Bases)
	@TabContent() {
		<div class="splitter">
			<div id="table-wrapper">
				<div id="table-top">
					<table class="sortable">
						<thead>
							<tr>
								<th style="width:200px;">Base</th>
								<th style="width:200px;">Owner - Faction</th>
								<th style="width:100px;">System</th>
								<th style="width:200px;">Base Nickname</th>
								<th style="width:50px;">System Nickname</th>
								<th style="width:100px;">Base Name ID</th>
								<th style="width:100px;">Infocard ID</th>
								<th style="max-width:100%;"></th>
							</tr>
						</thead>
						<tbody>
							for _, base := range bases {
								<tr
									id={ "marketgoods_click" + base.Nickname }
									hx-get={ types.GetCtx(ctx).SiteRoot + BaseMarketGoodUrl(base) }
									hx-trigger="click"
									hx-target="#table-bottom"
									hx-swap="innerHTML"
								>
									<td>{ base.Name }</td>
									<td>{ base.FactionName }</td>
									<td>{ base.System }</td>
									<td>{ base.Nickname }</td>
									<td>{ base.SystemNickname }</td>
									<td>{ strconv.Itoa(base.StridName) }</td>
									<td>{ strconv.Itoa(base.InfocardID) }</td>
									<td
										id={ "infocard_click" + base.Nickname }
										hx-get={ types.GetCtx(ctx).SiteRoot + BaseInfocardUrl(base) }
										hx-trigger="click"
										hx-target="#infocard_view"
										hx-swap="innerHTML"
									></td>
									@templ.Raw(JoinClickTriggers("marketgoods_click"+base.Nickname, "infocard_click"+base.Nickname))
								</tr>
							}
						</tbody>
					</table>
				</div>
				<div id="table-bottom">
					@BaseMarketGoodsBase()
				</div>
			</div>
			<div id="infocard_view">
				@InfocardShared()
			</div>
		</div>
	}
}

templ BaseMarketGoodsBase() {
	<table class="sortable">
		<thead>
			<tr class="flexed-tr">
				<th style="width:200px;">Good</th>
				<th style="width:100px;">Type</th>
				<th style="width:50px;">Price</th>
				<th style="width:50px;">Level Req'd</th>
				<th style="width:50px;">Reputation Req'd</th>
				<th style="width:50px;">Base Sells</th>
				<th style="width:50px;">Price Modifier</th>
				<th style="width:50px;">Price Base</th>
				<th style="width:300px;">Nickname</th>
				<th style="max-width:100%;"></th>
			</tr>
		</thead>
		<tbody>
			{ children... }
		</tbody>
	</table>
}

templ BaseMarketGoods(goods []configs_export.MarketGood) {
	@BaseMarketGoodsBase() {
		for _, good := range goods {
			<tr
				hx-get={ types.GetCtx(ctx).SiteRoot + MarketGoodInfocardUrl(good.Nickname) }
				hx-trigger="click"
				hx-target="#infocard_view"
				hx-swap="innerHTML"
			>
				<td>{ good.Name }</td>
				<td>{ string(good.Type) }</td>
				<td>{ strconv.Itoa(good.Price) }</td>
				<td>{ strconv.Itoa(good.LevelRequired) }</td>
				<td>{ fmt.Sprintf("%.2f", good.RepRequired) }</td>
				<td>{ strconv.FormatBool(!good.IsBuyOnly) }</td>
				<td>{ fmt.Sprintf("%.2f", good.PriceModifier) }</td>
				<td>{ strconv.Itoa(good.PriceBase) }</td>
				<td>{ good.Nickname }</td>
				<td></td>
			</tr>
		}
	}
}
