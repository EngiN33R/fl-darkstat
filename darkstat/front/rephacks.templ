package front

import (
	"strconv"
	"github.com/darklab8/fl-darkstat/darkstat/front/urls"
	"github.com/darklab8/fl-darkstat/darkstat/common/types"
	"github.com/darklab8/fl-configs/configs/configs_export"
	"fmt"
	"strings"
)

func RephacksURL(faction configs_export.Faction) string {
	return "rephacks/rep_" + strings.ToLower(faction.Nickname)
}

// https://www.cssscript.com/minimalist-table-sortable/#:~:text=Description%3A-,sorttable.,clicking%20on%20the%20table%20headers
// https://www.cssscript.com/fast-html-table-sorting/
templ RephacksT(factions []configs_export.Faction) {
	@TabMenu(urls.Rephacks)
	@TabContent() {
		<div class="splitter">
			<div id="table-wrapper">
				<div id="table-top">
					<table class="sortable">
						<thead>
							<tr>
								<th style="width:200px;">Name</th>
								<th style="width:200px;">Short Name</th>
								<th style="width:100px;">Nickname</th>
								<th style="width:150px;">Obj. Dest. Rep.Cng.</th>
								<th style="width:150px;">Mission Win Rep.Cng.</th>
								<th style="width:150px;">MIssion Fail Rep.Cng.</th>
								<th style="width:150px;">Mission Abort Rep.Cng.</th>
								<th style="width:200px;">InfonameID</th>
								<th style="width:50px;">InfocardID</th>
								<th style="max-width:100%;"></th>
							</tr>
						</thead>
						<tbody>
							for _, faction := range factions {
								<tr
									id={ "rephack_click" + faction.Nickname }
									hx-get={ types.GetCtx(ctx).SiteRoot + RephacksURL(faction) }
									hx-trigger="click"
									hx-target="#table-bottom"
									hx-swap="innerHTML"
								>
									<td>{ faction.Name }</td>
									<td>{ faction.ShortName }</td>
									<td>{ faction.Nickname }</td>
									<td>{ fmt.Sprintf("%.2f", faction.ObjectDestruction) }</td>
									<td>{ fmt.Sprintf("%.2f", faction.MissionSuccess) }</td>
									<td>{ fmt.Sprintf("%.2f", faction.MissionFailure) }</td>
									<td>{ fmt.Sprintf("%.2f", faction.MissionAbort) }</td>
									<td>{ strconv.Itoa(faction.InfonameID) }</td>
									<td>{ strconv.Itoa(faction.InfocardID) }</td>
									<td
										id={ "infocard_click" + faction.Nickname }
										hx-get={ types.GetCtx(ctx).SiteRoot + InfocardURL(faction.Infocard) }
										hx-trigger="click"
										hx-target="#infocard_view"
										hx-swap="innerHTML"
									></td>
									@templ.Raw(JoinClickTriggers("rephack_click"+faction.Nickname, "infocard_click"+faction.Nickname))
								</tr>
							}
						</tbody>
					</table>
				</div>
				<div id="table-bottom">
					@RephacksBottomBase()
				</div>
			</div>
			<div id="infocard_view">
				@InfocardShared()
			</div>
		</div>
	}
}

templ RephacksBottomBase() {
	<table class="sortable">
		<thead>
			<tr class="flexed-tr">
				<th style="width:250px;">Base Selling Rep Hack</th>
				<th style="width:200px;">Owner Faction</th>
				<th style="width:50px;">Probability %</th>
				<th style="width:100px;">System</th>
				<th style="width:150px;">Base Nickname</th>
				<th style="max-width:100%;"></th>
			</tr>
		</thead>
		<tbody>
			{ children... }
		</tbody>
	</table>
}

templ RephackBottom(rephacks []configs_export.Rephack) {
	@RephacksBottomBase() {
		for _, rep := range rephacks {
			<tr
				hx-get={ types.GetCtx(ctx).SiteRoot + InfocardURL(configs_export.InfocardKey(rep.BaseNickname)) }
				hx-trigger="click"
				hx-target="#infocard_view"
				hx-swap="innerHTML"
			>
				<td>{ rep.BaseName }</td>
				<td>{ rep.BaseOwner }</td>
				<td>{ fmt.Sprintf("%.2f", rep.Chance * 100) }</td>
				<td>{ rep.BaseSystem }</td>
				<td>{ rep.BaseNickname }</td>
				<td></td>
			</tr>
		}
	}
}
